- name: Microsoft C++ Code Analysis Action
  uses: microsoft/msvc-code-analysis-action@v0.1.0
  with:
    # The CMake build directory that should already be generated.
    cmakeBuildDirectory: 
    # The build Configuration (Release, Debug, etc.) to use. This is required if using a multi-configuration CMake generator.
    buildConfiguration: # optional
    # Ruleset file used to determine what checks are run.
    ruleset: # optional, default is NativeRecommendedRules.ruleset
    # Identical to setting "ignoredTargetPaths" and "ignoreSystemHeaders" for the given path. This is recommended over either option seperately.
    ignoredPaths: # optional
    # Any CMake targets defined inside these paths will be excluded from analysis. This is useful for excluding tests or locally built dependencies. List is ";" seperated, requires complete directory paths and can be absolute or relative to "github.workspace"
    ignoredTargetPaths: # optional
    # Any includes contained inside these path will be excluded from analysis. This will only filter existing paths add not add any additional includes to the compiler. This is useful for excluding target includes or other custom includes added to CMake. List is ";" seperated, requires complete directory paths and can be absolute or relative to "github.workspace"
    ignoredIncludePaths: # optional
    # Uses /external arguments to ignore warnings from any headers marked as SYSTEM in CMake.
    ignoreSystemHeaders: # optional, default is true
    # Optional path to generate the SARIF file to. If not supplied "results.sarif" will be created in the CMake build directory. Path can be absolute or relative to "github.workspace".
    resultsPath: # optional
    # Load implicit includes/libs for the given MSVC toolset using Visual Studio Command Prompt. Set to false if already loaded or a custom include path is needed.
    loadImplicitCompilerEnv: # optional, default is true
    # Optional parameters to pass to every instance of the compiler.
    additionalArgs: # optional
